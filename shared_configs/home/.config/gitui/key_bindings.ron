// Note:
// If the default key layout is lower case,
// and you want to use `Shift + q` to trigger the exit event,
// the setting should like this `exit: Some(( code: Char('Q'), modifiers: "SHIFT")),`
// The Char should be upper case, and the modifier should be set to "SHIFT".

// Note:
// find `KeysList` type in src/keys/key_list.rs for all possible keys.
// every key not overwritten via the config file will use the default specified there

// TODO: add to fig
(
    open_help: Some(( code: Char('?'), modifiers: "")),
    quit: Some(( code: Esc,  modifiers: "")),
    exit_popup: Some(( code: Char('q'),  modifiers: "")),

    move_left: Some(( code: Char('h'), modifiers: "")),
    move_right: Some(( code: Char('l'), modifiers: "")),
    move_up: Some(( code: Char('k'), modifiers: "")),
    move_down: Some(( code: Char('j'), modifiers: "")),

    home: Some(( code: Char('g'), modifiers: "")),
    end: Some(( code: Char('G'), modifiers: "SHIFT")),
    page_up: Some(( code: Char('u'), modifiers: "CONTROL")),
    page_down: Some(( code: Char('d'), modifiers: "CONTROL")),

    popup_up: Some(( code: Char('p'), modifiers: "CONTROL")),
    popup_down: Some(( code: Char('n'), modifiers: "CONTROL")),
    shift_up: Some(( code: Char('K'), modifiers: "SHIFT")),
    shift_down: Some(( code: Char('J'), modifiers: "SHIFT")),

    stage_unstage_item: Some(( code: Char(' '), modifiers: "")),
    commit: Some(( code: Enter, modifiers: "")),
    newline: Some(( code: Char('o'), modifiers: "CONTROL")),

    fetch: Some(( code: Char('f'),  modifiers: "")),
    pull: Some(( code: Char('p'),  modifiers: "")),
    push: Some(( code: Char('P'),  modifiers: "SHIFT")),
    force_push: Some(( code: Char('p'),  modifiers: "CONTROL")),

    // create_branch: Some(( code: Char('n'),  modifiers: "")),
    // enter: Some(( code: Char(' '),  modifiers: "")),

    // commit_amend: Some(( code: Char('A'), modifiers: "SHIFT")),
    // undo_commit: Some(( code: Char('z'), modifiers: "CONTROL")),

    // edit_file: Some(( code: Char('I'), modifiers: "SHIFT")),
    // status_reset_item: Some(( code: Char('U'), modifiers: "SHIFT")),
    // diff_reset_lines: Some(( code: Char('u'), modifiers: "")),
    // diff_stage_lines: Some(( code: Char('s'), modifiers: "")),
    // stashing_save: Some(( code: Char('w'), modifiers: "")),
    // stashing_toggle_index: Some(( code: Char('m'), modifiers: "")),
    // stash_open: Some(( code: Char('l'), modifiers: "")),
    // abort_merge: Some(( code: Char('M'), modifiers: "SHIFT")),
)

// defaults:
    // tab_status: Some(( code: Char('1'), modifiers: "")),
    // tab_log: Some(( code: Char('2'),  modifiers: "")),
    // tab_files: Some(( code: Char('3'),  modifiers: "")),
    // tab_stashing: Some(( code: Char('4'),  modifiers: "")),
    // tab_stashes: Some(( code: Char('5'),  modifiers: "")),
    // tab_toggle: Some(( code: Tab,  modifiers: "")),
    // tab_toggle_reverse: Some(( code: BackTab,  modifiers: "SHIFT")),
    // toggle_workarea: Some(( code: Char('w'),  modifiers: "")),
    // exit: Some(( code: Char('c'),  modifiers: "CONTROL")),
    // quit: Some(( code: Char('q'),  modifiers: "")),
    // exit_popup: Some(( code: Esc,  modifiers: "")),
    // open_commit: Some(( code: Char('c'),  modifiers: "")),
    // open_commit_editor: Some(( code: Char('e'), modifiers: "CONTROL")),
    // open_help: Some(( code: Char('h'),  modifiers: "")),
    // open_options: Some(( code: Char('o'),  modifiers: "")),
    // move_left: Some(( code: Left,  modifiers: "")),
    // move_right: Some(( code: Right,  modifiers: "")),
    // tree_collapse_recursive: Some(( code: Left,  modifiers: "SHIFT")),
    // tree_expand_recursive: Some(( code: Right,  modifiers: "SHIFT")),
    // home: Some(( code: Home,  modifiers: "")),
    // end: Some(( code: End,  modifiers: "")),
    // move_up: Some(( code: Up,  modifiers: "")),
    // move_down: Some(( code: Down,  modifiers: "")),
    // popup_up: Some(( code: Up,  modifiers: "")),
    // popup_down: Some(( code: Down,  modifiers: "")),
    // page_down: Some(( code: PageDown,  modifiers: "")),
    // page_up: Some(( code: PageUp,  modifiers: "")),
    // shift_up: Some(( code: Up,  modifiers: "SHIFT")),
    // shift_down: Some(( code: Down,  modifiers: "SHIFT")),
    // enter: Some(( code: Enter,  modifiers: "")),
    // blame: Some(( code: Char('B'),  modifiers: "SHIFT")),
    // file_history: Some(( code: Char('H'),  modifiers: "SHIFT")),
    // edit_file: Some(( code: Char('e'),  modifiers: "")),
    // status_stage_all: Some(( code: Char('a'),  modifiers: "")),
    // status_reset_item: Some(( code: Char('D'),  modifiers: "SHIFT")),
    // diff_reset_lines: Some(( code: Char('d'),  modifiers: "")),
    // status_ignore_file: Some(( code: Char('i'),  modifiers: "")),
    // diff_stage_lines: Some(( code: Char('s'),  modifiers: "")),
    // stashing_save: Some(( code: Char('s'),  modifiers: "")),
    // stashing_toggle_untracked: Some(( code: Char('u'),  modifiers: "")),
    // stashing_toggle_index: Some(( code: Char('i'),  modifiers: "")),
    // stash_apply: Some(( code: Char('a'),  modifiers: "")),
    // stash_open: Some(( code: Right,  modifiers: "")),
    // stash_drop: Some(( code: Char('D'),  modifiers: "SHIFT")),
    // cmd_bar_toggle: Some(( code: Char('.'),  modifiers: "")),
    // log_tag_commit: Some(( code: Char('t'),  modifiers: "")),
    // log_mark_commit: Some(( code: Char(' '),  modifiers: "")),
    // log_checkout_commit: GituiKeyEvent { code: ( code: Char('S'), modifiers: modifiers: "SHIFT" },
    // log_reset_commit: GituiKeyEvent { code: ( code: Char('R'), modifiers: modifiers: "SHIFT" },
    // log_reword_commit: GituiKeyEvent { code: ( code: Char('r'), modifiers: modifiers: "" },
    // log_find: GituiKeyEvent { code: ( code: Char('f'), modifiers: modifiers: "" },
    // find_commit_sha: Some(( code: Char('j'), modifiers: "CONTROL")),
    // commit_amend: Some(( code: Char('a'),  modifiers: "CONTROL")),
    // toggle_signoff: Some(( code: Char('s'),  modifiers: "CONTROL")),
    // toggle_verify: Some(( code: Char('f'),  modifiers: "CONTROL")),
    // copy: Some(( code: Char('y'),  modifiers: "")),
    // create_branch: Some(( code: Char('c'),  modifiers: "")),
    // rename_branch: Some(( code: Char('r'),  modifiers: "")),
    // select_branch: Some(( code: Char('b'),  modifiers: "")),
    // delete_branch: Some(( code: Char('D'),  modifiers: "SHIFT")),
    // merge_branch: Some(( code: Char('m'),  modifiers: "")),
    // rebase_branch: Some(( code: Char('R'),  modifiers: "SHIFT")),
    // compare_commits: Some(( code: Char('C'),  modifiers: "SHIFT")),
    // tags: Some(( code: Char('T'),  modifiers: "SHIFT")),
    // delete_tag: Some(( code: Char('D'),  modifiers: "SHIFT")),
    // select_tag: Some(( code: Enter,  modifiers: "")),
    // push: Some(( code: Char('p'),  modifiers: "")),
    // force_push: Some(( code: Char('P'),  modifiers: "SHIFT")),
    // undo_commit: Some(( code: Char('U'),  modifiers: "SHIFT")),
    // fetch: Some(( code: Char('F'),  modifiers: "SHIFT")),
    // pull: Some(( code: Char('f'),  modifiers: "")),
    // abort_merge: Some(( code: Char('A'),  modifiers: "SHIFT")),
    // open_file_tree: Some(( code: Char('F'),  modifiers: "SHIFT")),
    // file_find: Some(( code: Char('f'),  modifiers: "")),
    // branch_find: Some(( code: Char('f'),  modifiers: "")),
    // diff_hunk_next: Some(( code: Char('n'),  modifiers: "")),
    // diff_hunk_prev: Some(( code: Char('p'),  modifiers: "")),
    // stage_unstage_item: Some(( code: Enter,  modifiers: "")),
    // tag_annotate: Some(( code: Char('a'),  modifiers: "CONTROL")),
    // view_submodules: Some(( code: Char('S'),  modifiers: "SHIFT")),
    // view_submodule_parent: Some(( code: Char('p'),  modifiers: "")),
    // update_submodule: Some(( code: Char('u'),  modifiers: "")),
    // commit_history_next: Some(( code: Char('n'),  modifiers: "CONTROL")),
    // commit: Some(( code: Char('d'),  modifiers: "CONTROL")),
    // newline: Some(( code: Enter,  modifiers: "")),
